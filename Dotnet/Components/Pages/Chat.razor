@page "/chat"
@inject IHttpClientFactory HttpFactory
@inject IJSRuntime JS

<section id="chatWindow" hidden="@chatHidden" style="background-color: #eee;">
  <div class="container py-5">

    <div class="row d-flex justify-content-center">
      <div class="col-md-12 col-lg-12 col-xl-12">

        <div class="card" id="chat1" style="border-radius: 15px;">
          <div
            class="card-header d-flex justify-content-between align-items-center p-3 bg-info text-white border-bottom-0"
            style="border-top-left-radius: 15px; border-top-right-radius: 15px;">
            <i class="fas fa-angle-left"></i>
            <p class="mb-0 fw-bold">Live chat</p>
            <i class="fas fa-times"></i>
          </div>
          <div class="card-body">

            @foreach(var message in messages){
                if(message.Role == "asssistant") {
                    <div class="d-flex flex-row justify-content-start mb-4">
                        <div class="p-3 ms-3" style="border-radius: 15px; background-color: rgba(57, 192, 237,.2);">
                <p class="small mb-0">@message.Content</p>
              </div>
              </div>
                }
                else {
                    <div class="d-flex flex-row justify-content-end mb-4">
                        <div class="p-3 ms-3" style="border-radius: 15px; background-color: rgba(57, 192, 237,.2);">
                <p class="small mb-0">@message.Content</p>
              </div>
              </div>
                }
            }

            <div class="form-outline">
              <textarea class="form-control" id="textAreaExample" rows="4"></textarea>
              <label class="form-label" for="textAreaExample">Type your message</label>
            </div>

          </div>
        </div>

      </div>
    </div>

  </div>
</section>

<button id="chatButton" @onclick="ToggleChat" class="btn btn-primary">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat" viewBox="0 0 16 16">
  <path d="M2.678 11.894a1 1 0 0 1 .287.801 11 11 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8 8 0 0 0 8 14c3.996 0 7-2.807 7-6s-3.004-6-7-6-7 2.808-7 6c0 1.468.617 2.83 1.678 3.894m-.493 3.905a22 22 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a10 10 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9 9 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105"/>
</svg>
</button>

@code {
    public bool chatHidden = true;
    public List<ChatMessage> messages = new();
    public Timer? timer = null;


    protected override void OnInitialized()
    {
        timer = new Timer(GetAnomoly, null, TimeSpan.Zero, TimeSpan.FromSeconds(5));
    }

    public void ToggleChat() {
        chatHidden = !chatHidden;
    }

    public void ToggleChat(bool newVal) {
        chatHidden = newVal;
    }

    public void Dispose() {
        timer?.Dispose();
    }

    public async void GetAnomoly(object? state){
        try {
            Console.WriteLine("GetAnomoly");
            HttpClient client = HttpFactory.CreateClient("PythonWebServer");
            var response = await client.GetAsync("/anomaly");

            string content = await response.Content.ReadAsStringAsync();
            if (string.IsNullOrEmpty(content)) return;

            var receivedMessages = JsonSerializer.Deserialize<List<ChatMessage>>(content);
            messages.Add(receivedMessages.Last());

            if (chatHidden) ToggleChat();
            timer.Dispose();
            timer = null;
        }
        catch {
            return;
        }
    }


    public class ChatMessage {
        [System.Text.Json.Serialization.JsonPropertyName("role")]
        public string Role {get;set;}
        [System.Text.Json.Serialization.JsonPropertyName("content")]
        public string Content {get;set;}
    }
}